# Generated by Django 5.2.4 on 2025-07-26 18:09

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('company_id', models.CharField(choices=[('zroorat', 'Zroorat'), ('unique', 'Unique')], max_length=10)),
                ('customer_name', models.CharField(max_length=200)),
                ('contact_number', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('project_type', models.CharField(blank=True, help_text='Project type (for Unique Solar projects)', max_length=50, null=True)),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('pending', 'Pending'), ('complete', 'Complete')], default='pending', max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('paid', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('pending', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('project_type_category', models.CharField(choices=[('unique_solar', 'Unique Solar'), ('zroorat', 'Zroorat.com')], help_text='Main project type category', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UniqueSolarProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('product_type', models.CharField(choices=[
                    
                    ('solar_panel', 'Solar Panel'),
        ('inverter', 'Inverter'),
        ('structure', 'Structure'),
        ('allied_material', 'Allied Material'), 
        ('battery', 'Battery'),
        ('turnkey_activities', 'Turnkey Activities'),
        ('earthing_boring', 'Earthing Boring'),
        ('net_metering', 'Net Metering'),
        ('others', 'Others')

                    # ('solar_panel', 'Solar Panel'), ('inverter', 'Inverter'), ('battery', 'Battery'), ('mounting', 'Mounting System'), ('cable', 'Cable'), ('others', 'Others')
                    
                    ], max_length=50)),
                ('specification', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['product_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UniqueSolarProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('customer_name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('valid_until', models.DateField()),
                ('project_type', models.CharField(choices=[('on_grid', 'On Grid'), ('off_grid', 'Off Grid'), ('hybrid', 'Hybrid')], default='on_grid', max_length=100)),
                ('installation_type', models.CharField(choices=[('no_installation', 'No Installation'), ('standard', 'Standard Installation'), ('elevated', 'Elevated Installation')], default='no_installation', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('tax_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('grand_total', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('advance_payment', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_payment', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('completion_payment', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('complete', 'Complete')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Unique Solar Project',
                'verbose_name_plural': 'Unique Solar Projects',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ZarorratProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('customer_name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('valid_until', models.DateField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('complete', 'Complete')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Zarorrat Project',
                'verbose_name_plural': 'Zarorrat Projects',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ZarorratService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UniqueSolarProjectChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=100)),
                ('is_completed', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checklist_items', to='Project.uniquesolarproject')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('project', 'order')},
            },
        ),
        migrations.CreateModel(
            name='UniqueSolarProjectImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Project image or receipt', upload_to='unique_solar_projects/')),
                ('caption', models.CharField(blank=True, help_text='Optional caption for the image', max_length=200, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='Project.uniquesolarproject')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('project', 'order')},
            },
        ),
        migrations.CreateModel(
            name='UniqueSolarProjectProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type', models.CharField(choices=[

                    ('solar_panel', 'Solar Panel'),
        ('inverter', 'Inverter'),
        ('structure', 'Structure'),
        ('allied_material', 'Allied Material'), 
        ('battery', 'Battery'),
        ('turnkey_activities', 'Turnkey Activities'),
        ('earthing_boring', 'Earthing Boring'),
        ('net_metering', 'Net Metering'),
        ('others', 'Others')
                    
                    # ('solar_panel', 'Solar Panel'), ('inverter', 'Inverter'), ('battery', 'Battery'), ('mounting', 'Mounting System'), ('cable', 'Cable'), ('others', 'Others')
                    
                    ], max_length=50)),
                ('specify_product', models.CharField(max_length=200)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('line_total', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='Project.uniquesolarproject')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('project', 'order')},
            },
        ),
        migrations.CreateModel(
            name='ZarorratProjectService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selected_services', to='Project.zarorratproject')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='Project.zarorratservice')),
            ],
            options={
                'unique_together': {('project', 'service')},
            },
        ),
    ]
